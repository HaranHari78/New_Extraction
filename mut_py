import os
import json

# Input: Flat mutation data
input_file = r"C:\Users\HariharaM12\PycharmProjects\New_project\output\fields\mutational_status_flat.json"

# Output: Grouped by gene
output_file = r"C:\Users\HariharaM12\PycharmProjects\New_project\output\fields\mutational_status_grouped.json"

# Load input data
with open(input_file, 'r', encoding='utf-8') as f:
    flat_data = json.load(f)

# Initialize grouped result
grouped_result = {
    "mutational_status": {}
}

# Grouping logic
for item in flat_data:
    doc_title = item.get("document_title", "")
    gene_data = item.get("mutational_status", {})

    for gene, fields in gene_data.items():
        # Skip gene if all fields are empty
        if not any(fields.values()):
            continue

        gene_entry = {
            "document_title": doc_title,
            "status": fields.get("status", ""),
            "date": fields.get("date", ""),
            "evidence": fields.get("evidence", "")
        }

        if gene not in grouped_result["mutational_status"]:
            grouped_result["mutational_status"][gene] = []

        grouped_result["mutational_status"][gene].append(gene_entry)

# Save final grouped output
with open(output_file, 'w', encoding='utf-8') as f:
    json.dump(grouped_result, f, indent=4)

print(f"✅ Final grouped mutation output saved to → {output_file}")
