import os
import json
import re
from pathlib import Path

# 🔹 Input folders (adjust if needed)
sentence_dir = Path(r"C:\Users\HariharaM12\PycharmProjects\New_project\output\sentences")
field_dir = Path(r"C:\Users\HariharaM12\PycharmProjects\New_project\output\fields")

# 🔹 Output files
performance_output_path = Path(r"C:\Users\HariharaM12\PycharmProjects\New_project\output\performance_status_output.json")
mutation_output_path = Path(r"C:\Users\HariharaM12\PycharmProjects\New_project\output\mutational_status_output.json")

# 🔹 Output lists
performance_status_output = []
mutational_status_output = []

# 🔹 Clean filename helper
def sanitize_filename(name: str) -> str:
    return re.sub(r'[\\/*?:"<>|]', "_", name)

# 🔁 Process each field file
for field_file in field_dir.glob("*.json"):
    try:
        with open(field_file, "r", encoding="utf-8") as f:
            field_data = json.load(f)

        document_title = field_data.get("document_title", field_file.stem)
        sentence_file = sentence_dir / f"{sanitize_filename(document_title)}.json"

        if not sentence_file.exists():
            print(f"⚠️ Sentence file not found: {sentence_file}")
            continue

        with open(sentence_file, "r", encoding="utf-8") as f:
            sentence_data = json.load(f)

        # ✅ Extract performance_status block
        performance_status_output.append({
            "document_title": document_title,
            "performance_status": field_data.get("performance_status", {})
        })

        # ✅ Extract mutational_status block
        mutational_status_output.append({
            "document_title": document_title,
            "mutational_status": field_data.get("mutational_status", {})
        })

    except Exception as e:
        print(f"❌ Error processing {field_file.name}: {e}")

# 💾 Save output files
with open(performance_output_path, "w", encoding="utf-8") as f:
    json.dump(performance_status_output, f, indent=4)

with open(mutation_output_path, "w", encoding="utf-8") as f:
    json.dump(mutational_status_output, f, indent=4)

print(f"✅ Saved: {performance_output_path}")
print(f"✅ Saved: {mutation_output_path}")
