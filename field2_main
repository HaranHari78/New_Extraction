import os
import json
import re
from pathlib import Path

# üîπ Input folder (field-level JSON files)
field_input_dir = Path(r"C:\Users\HariharaM12\PycharmProjects\New_project\output\fields")

# üîπ Output folders
performance_output_dir = Path(r"C:\Users\HariharaM12\PycharmProjects\New_project\output\performance_status_fields")
mutation_output_dir = Path(r"C:\Users\HariharaM12\PycharmProjects\New_project\output\mutational_status_fields")

os.makedirs(performance_output_dir, exist_ok=True)
os.makedirs(mutation_output_dir, exist_ok=True)

# üîπ Helper: sanitize filenames
def sanitize_filename(name: str) -> str:
    return re.sub(r'[\\/*?:"<>|]', "_", name)

# üîÅ Loop through each field JSON file
for filename in os.listdir(field_input_dir):
    if not filename.endswith(".json"):
        continue

    input_path = field_input_dir / filename
    try:
        with open(input_path, 'r', encoding='utf-8') as f:
            content = f.read().strip()
        if not content:
            print(f"‚ö†Ô∏è Skipping empty file: {filename}")
            continue
        data = json.loads(content)
    except Exception as e:
        print(f"‚ùå Error reading {filename}: {e}")
        continue

    document_title = data.get("document_title", filename.replace(".json", ""))
    safe_filename = sanitize_filename(document_title) + ".json"

    # ‚úÖ Save performance_status field
    performance_data = {
        "document_title": document_title,
        "performance_status": data.get("performance_status", {})
    }
    with open(performance_output_dir / safe_filename, 'w', encoding='utf-8') as f:
        json.dump(performance_data, f, indent=4)
    print(f"‚úÖ Saved ‚Üí {performance_output_dir / safe_filename}")

    # ‚úÖ Save mutational_status field
    mutation_data = {
        "document_title": document_title,
        "mutational_status": data.get("mutational_status", {})
    }
    with open(mutation_output_dir / safe_filename, 'w', encoding='utf-8') as f:
        json.dump(mutation_data, f, indent=4)
    print(f"‚úÖ Saved ‚Üí {mutation_output_dir / safe_filename}")
