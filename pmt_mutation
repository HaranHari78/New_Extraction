def build_mutation_prompt(sentences: list, doc_title: str) -> str:
    joined_text = " ".join(sentences)
    return f"""
You are a medical language model trained to extract structured clinical mutation data from a patient's clinical note.

ðŸ“„ Document Title: {doc_title}

Below are sentences related to the patient's mutational status.

Your task is to extract the mutation status for the following genes:
- NPM1
- TP53
- FLT3
- ASXL1

For **each gene**, return:
- `status`: mutated, wild type, not mutated, negative, positive, not detected, etc.
- `date`: the test or mention date, if present
- `evidence`: the exact sentence or phrase that supports the status

ðŸ§  Important Rules:
- Only include a gene **if it has any non-empty field** (status, date, or evidence)
- Do **not make up** or guess status; if unclear, leave fields as empty string
- Focus only on the 4 mentioned genes

Return JSON strictly in this format:

{{
  "mutational_status": {{
    "NPM1": {{"status": "", "date": "", "evidence": ""}},
    "TP53": {{"status": "", "date": "", "evidence": ""}},
    "FLT3": {{"status": "", "date": "", "evidence": ""}},
    "ASXL1": {{"status": "", "date": "", "evidence": ""}}
  }}
}}

ðŸ”¬ Sentences:
\"\"\"{joined_text}\"\"\"
"""
